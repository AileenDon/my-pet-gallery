{"ast":null,"code":"var _jsxFileName = \"/Users/yuanyuandong/Documents/VSC/my-pet-gallery/src/components/ImageCard.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { usePetContext } from \"../context/PetContext\";\n\n//structure of a Pet object\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// ImageCard component to display pet information\nconst ImageCard = ({\n  pet\n}) => {\n  _s();\n  // Access selected pets and the toggle selection function from the context\n  const {\n    selectedPets,\n    toggleSelectPet\n  } = usePetContext();\n  return (\n    /*#__PURE__*/\n    // Container for the card with a click event to toggle selection\n    _jsxDEV(Card, {\n      onClick: () => toggleSelectPet(pet.id),\n      children: [/*#__PURE__*/_jsxDEV(SquareImage, {\n        src: require(`../img/${pet.imageUrl}`),\n        alt: pet.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: pet.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: pet.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: new Date(pet.createdAt).toLocaleDateString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: selectedPets.includes(pet.id),\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(ImageCard, \"CXOKum2/muEFlh+CPBw4kQuRs7k=\", false, function () {\n  return [usePetContext];\n});\n_c = ImageCard;\nexport default ImageCard;\n\n// Styled Components\n\n// card container\nconst Card = styled.div`\n  border: 1px solid #ddd;\n  padding: 16px;\n  margin: 8px;\n  display: inline-block;\n  text-align: center;\n`;\n\n//display image as a square with cropped fit\n_c2 = Card;\nconst SquareImage = styled.img`\n  width: 150px;\n  height: 150px;\n  object-fit: cover;\n  border-radius: 8px;\n`;\n_c3 = SquareImage;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ImageCard\");\n$RefreshReg$(_c2, \"Card\");\n$RefreshReg$(_c3, \"SquareImage\");","map":{"version":3,"names":["React","styled","usePetContext","jsxDEV","_jsxDEV","ImageCard","pet","_s","selectedPets","toggleSelectPet","Card","onClick","id","children","SquareImage","src","require","imageUrl","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","description","Date","createdAt","toLocaleDateString","type","checked","includes","readOnly","_c","div","_c2","img","_c3","$RefreshReg$"],"sources":["/Users/yuanyuandong/Documents/VSC/my-pet-gallery/src/components/ImageCard.tsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { usePetContext } from \"../context/PetContext\";\n\n//structure of a Pet object\ninterface Pet {\n  id: string;\n  imageUrl: string;\n  title: string;\n  description: string;\n  createdAt: string;\n}\n\n// ImageCard component to display pet information\nconst ImageCard: React.FC<{ pet: Pet }> = ({ pet }) => {\n  // Access selected pets and the toggle selection function from the context\n  const { selectedPets, toggleSelectPet } = usePetContext();\n\n  return (\n    // Container for the card with a click event to toggle selection\n    <Card onClick={() => toggleSelectPet(pet.id)}>\n      <SquareImage src={require(`../img/${pet.imageUrl}`)} alt={pet.title} />\n      <h3>{pet.title}</h3>\n      <p>{pet.description}</p>\n      <p>{new Date(pet.createdAt).toLocaleDateString()}</p>\n      <input type=\"checkbox\" checked={selectedPets.includes(pet.id)} readOnly />\n    </Card>\n  );\n};\n\nexport default ImageCard;\n\n// Styled Components\n\n// card container\nconst Card = styled.div`\n  border: 1px solid #ddd;\n  padding: 16px;\n  margin: 8px;\n  display: inline-block;\n  text-align: center;\n`;\n\n//display image as a square with cropped fit\n\nconst SquareImage = styled.img`\n  width: 150px;\n  height: 150px;\n  object-fit: cover;\n  border-radius: 8px;\n`;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,aAAa,QAAQ,uBAAuB;;AAErD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AASA;AACA,MAAMC,SAAiC,GAAGA,CAAC;EAAEC;AAAI,CAAC,KAAK;EAAAC,EAAA;EACrD;EACA,MAAM;IAAEC,YAAY;IAAEC;EAAgB,CAAC,GAAGP,aAAa,CAAC,CAAC;EAEzD;IAAA;IACE;IACAE,OAAA,CAACM,IAAI;MAACC,OAAO,EAAEA,CAAA,KAAMF,eAAe,CAACH,GAAG,CAACM,EAAE,CAAE;MAAAC,QAAA,gBAC3CT,OAAA,CAACU,WAAW;QAACC,GAAG,EAAEC,OAAO,CAAC,UAAUV,GAAG,CAACW,QAAQ,EAAE,CAAE;QAACC,GAAG,EAAEZ,GAAG,CAACa;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvEnB,OAAA;QAAAS,QAAA,EAAKP,GAAG,CAACa;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACpBnB,OAAA;QAAAS,QAAA,EAAIP,GAAG,CAACkB;MAAW;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBnB,OAAA;QAAAS,QAAA,EAAI,IAAIY,IAAI,CAACnB,GAAG,CAACoB,SAAS,CAAC,CAACC,kBAAkB,CAAC;MAAC;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrDnB,OAAA;QAAOwB,IAAI,EAAC,UAAU;QAACC,OAAO,EAAErB,YAAY,CAACsB,QAAQ,CAACxB,GAAG,CAACM,EAAE,CAAE;QAACmB,QAAQ;MAAA;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtE;EAAC;AAEX,CAAC;AAAChB,EAAA,CAdIF,SAAiC;EAAA,QAEKH,aAAa;AAAA;AAAA8B,EAAA,GAFnD3B,SAAiC;AAgBvC,eAAeA,SAAS;;AAExB;;AAEA;AACA,MAAMK,IAAI,GAAGT,MAAM,CAACgC,GAAG;AACvB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,GAAA,GARMxB,IAAI;AAUV,MAAMI,WAAW,GAAGb,MAAM,CAACkC,GAAG;AAC9B;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GALItB,WAAW;AAAA,IAAAkB,EAAA,EAAAE,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAL,EAAA;AAAAK,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}